/* config/IBAMR_config.h.tmp.in.  Generated from configure.ac by autoheader.  */

/* Define to dummy `main' function (if any) required to link to the Fortran
   libraries. */
#undef FC_DUMMY_MAIN

/* Define if F77 and FC dummy `main' functions are identical. */
#undef FC_DUMMY_MAIN_EQ_F77

/* Define to a macro mangling the given C identifier (in lower and upper
   case), which must not contain underscores, for linking with Fortran. */
#undef FC_FUNC

/* As FC_FUNC, but for C identifiers containing underscores. */
#undef FC_FUNC_

/* Defined if the requested minimum BOOST version is satisfied */
#undef HAVE_BOOST

/* Boolean value indicating whether the C++ compiler supports the
   __builtin_expect keyword */
#undef HAVE_BUILTIN_EXPECT

/* Boolean value indicating whether the C++ compiler supports the
   __builtin_prefetch keyword */
#undef HAVE_BUILTIN_PREFETCH

/* define if the compiler supports basic C++11 syntax */
#undef HAVE_CXX11

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if you have the libgsl library. */
#undef HAVE_LIBGSL

/* Define if you have the libgslcblas library. */
#undef HAVE_LIBGSLCBLAS

/* Define to 1 if you have the `hdf5' library (-lhdf5). */
#undef HAVE_LIBHDF5

/* Define to 1 if you have the `hdf5_hl' library (-lhdf5_hl). */
#undef HAVE_LIBHDF5_HL

/* Define to 1 if you have the `HYPRE' library (-lHYPRE). */
#undef HAVE_LIBHYPRE

/* Define if you have the libmesh library. */
#undef HAVE_LIBMESH

/* Define if you have the libmesh_dbg library. */
#undef HAVE_LIBMESH_DBG

/* Define if you have the libmesh_devel library. */
#undef HAVE_LIBMESH_DEVEL

/* Define if you have the libmesh_oprof library. */
#undef HAVE_LIBMESH_OPROF

/* Define if you have the libmesh_opt library. */
#undef HAVE_LIBMESH_OPT

/* Define if you have the libmesh_prof library. */
#undef HAVE_LIBMESH_PROF

/* Define if you have the libmuParser library. */
#undef HAVE_LIBMUPARSER

/* Define to 1 if you have the `petsc' library (-lpetsc). */
#undef HAVE_LIBPETSC

/* Define to 1 if you have the `z' library (-lz). */
#undef HAVE_LIBZ

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define if you have the MPI library. */
#undef HAVE_MPI

/* Define if you have the silo library. */
#undef HAVE_SILO

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#undef LT_OBJDIR

/* Define to 1 if `major', `minor', and `makedev' are declared in <mkdev.h>.
   */
#undef MAJOR_IN_MKDEV

/* Define to 1 if `major', `minor', and `makedev' are declared in
   <sysmacros.h>. */
#undef MAJOR_IN_SYSMACROS

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Version number of package */
#undef VERSION

/* Major version of IBAMR. */
#undef VERSION_MAJOR

/* Minor version of IBAMR. */
#undef VERSION_MINOR

/* Subminor version of IBAMR. */
#undef VERSION_SUBMINOR

/* Define IBAMR-specific macros. */
#include <ibamr/ibamr_macros.h>
